{"version":3,"sources":["contexts/gnome-search.context.tsx","components/background/index.tsx","assets/icons/bar.icon.tsx","assets/icons/search.icon.tsx","components/gnome-search-bar/search-input.tsx","components/gnome-search-bar/index.tsx","enums/error.enum.ts","custom-hooks/useBrastlewarkAPI.ts","components/error-card/index.tsx","components/gnome-card/skeleton.tsx","components/not-found-card/index.tsx","components/gnome-grid/index.tsx","custom-hooks/usePageBottom.ts","components/app/app-container.tsx","components/app/index.tsx","index.tsx"],"names":["GnomeSearchContext","createContext","filter","isSearching","setFilter","S","setIsSearching","Provider","GnomeSearchProvider","children","useState","useEffect","document","body","style","overflow","value","useGnomeSearchContext","context","useContext","Error","Background","className","BarIcon","color","stroke","fill","strokeWidth","viewBox","height","width","xmlns","d","SearchIcon","fillRule","clipRule","SearchInput","search","setSearch","filterGnomes","type","placeholder","onFocus","onBlur","onChange","target","onKeyDown","key","onClick","GnomeSearchBar","fetchAPI","a","axios","get","Brastlewark","data","ErrorCard","error","FETCHING","getErrorMessage","GnomeCardSkeleton","SkeletonCard","circle","highlightColor","NotFoundCard","GnomeCard","lazy","GnomeGrid","renderedCards","setRenderedCards","isAtTheBottom","bottom","setBottom","handleScroll","isBottom","window","innerHeight","documentElement","scrollTop","offsetHeight","addEventListener","removeEventListener","usePageBottom","setError","gnomes","setGnomes","useBrastlewarkAPI","console","log","filteredGnomes","useMemo","gnome","name","toLowerCase","includes","fallback","length","_v","map","AppContainer","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f6c77d73.chunk.js","sourcesContent":["import { createContext, useContext, useEffect, useState } from \"react\";\nimport {\n  GnomeSearchContextInterface,\n  GnomeSearchProviderInterface,\n} from \"../interfaces/gnome-search-context.interface\";\n\nconst GnomeSearchContext = createContext({\n  filter: \"\",\n  isSearching: false,\n  setFilter: (S: string) => {},\n  setIsSearching: (S: boolean) => {},\n} as GnomeSearchContextInterface);\n\nconst { Provider } = GnomeSearchContext;\n\nexport const GnomeSearchProvider = ({\n  children,\n}: GnomeSearchProviderInterface) => {\n  const [filter, setFilter] = useState<string>(\"\");\n  const [isSearching, setIsSearching] = useState<boolean>(false);\n\n  useEffect(() => {\n    document.body.style.overflow = isSearching ? \"hidden\" : \"auto\";\n  }, [isSearching]);\n\n  return (\n    <Provider value={{ filter, isSearching, setFilter, setIsSearching }}>\n      {children}\n    </Provider>\n  );\n};\n\nexport const useGnomeSearchContext = () => {\n  const context = useContext(GnomeSearchContext);\n\n  if (!context) {\n    throw new Error(\n      \"useGnomeSearchContext must be used within a GnomeSearchProvider\"\n    );\n  }\n\n  return context;\n};\n","import { ReactNode } from \"react\";\n\nexport default function Background({ children }: { children: ReactNode }) {\n  return <div className=\"background\">{children}</div>;\n}\n","interface BarIconInterface {\n  className?: string;\n  color?: string;\n}\n\nexport default function BarIcon({\n  className,\n  color = \"white\",\n}: BarIconInterface) {\n  return (\n    <svg\n      stroke=\"currentColor\"\n      fill=\"currentColor\"\n      strokeWidth=\"0\"\n      viewBox=\"0 0 448 512\"\n      height=\"1em\"\n      width=\"1em\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={className}\n    >\n      <path\n        fill={color}\n        d=\"M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z\"\n      />\n    </svg>\n  );\n}\n","interface SearchIconInterface {\n  className?: string;\n  color?: string;\n}\n\nexport default function SearchIcon({\n  className,\n  color = \"white\",\n}: SearchIconInterface) {\n  return (\n    <svg\n      stroke=\"currentColor\"\n      fill=\"currentColor\"\n      strokeWidth=\"0\"\n      viewBox=\"0 0 16 16\"\n      height=\"1em\"\n      width=\"1em\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={className}\n    >\n      <path\n        fill={color}\n        fillRule=\"evenodd\"\n        d=\"M10.442 10.442a1 1 0 011.415 0l3.85 3.85a1 1 0 01-1.414 1.415l-3.85-3.85a1 1 0 010-1.415z\"\n        clipRule=\"evenodd\"\n      />\n      <path\n        fill={color}\n        fillRule=\"evenodd\"\n        d=\"M6.5 12a5.5 5.5 0 100-11 5.5 5.5 0 000 11zM13 6.5a6.5 6.5 0 11-13 0 6.5 6.5 0 0113 0z\"\n        clipRule=\"evenodd\"\n      />\n    </svg>\n  );\n}\n","import { useGnomeSearchContext } from \"../../contexts/gnome-search.context\";\nimport SearchIcon from \"../../assets/icons/search.icon\";\nimport { useState } from \"react\";\n\nexport default function SearchInput() {\n  const [search, setSearch] = useState<string>(\"\");\n  const { setFilter, setIsSearching } = useGnomeSearchContext();\n\n  const filterGnomes = () => {\n    setFilter(search);\n    setIsSearching(false);\n  };\n\n  return (\n    <div className=\"search-bar-input-container\">\n      <input\n        type=\"text\"\n        className=\"search-bar-input\"\n        placeholder=\"Search a Gnome...\"\n        value={search}\n        onFocus={() => setIsSearching(true)}\n        onBlur={() => setIsSearching(false)}\n        onChange={({ target: { value } }) => {\n          setIsSearching(true);\n          setSearch(value);\n        }}\n        onKeyDown={({ key }) => {\n          if (key === \"Enter\") {\n            filterGnomes();\n          }\n        }}\n      />\n      <div className=\"input-icon\" onClick={filterGnomes}>\n        <SearchIcon />\n      </div>\n    </div>\n  );\n}\n","import BarIcon from \"../../assets/icons/bar.icon\";\nimport SearchInput from \"./search-input\";\n\nexport default function GnomeSearchBar() {\n  return (\n    <div className=\"search-bar\">\n      <BarIcon className=\"cursor-pointer\" />\n      <SearchInput />\n    </div>\n  );\n}\n","export enum Error {\n  FETCHING = \"FETCHING\",\n}\n","import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Error } from \"../enums/error.enum\";\nimport { GnomeInterface } from \"../interfaces/gnome.interface\";\n\nconst fetchAPI = async (): Promise<GnomeInterface[]> => {\n  interface BrastlewarkApiResultInterface {\n    Brastlewark: GnomeInterface[];\n  }\n\n  const {\n    data: { Brastlewark },\n  }: { data: BrastlewarkApiResultInterface } = await axios.get(\n    \"https://raw.githubusercontent.com/rrafols/mobile_test/master/data.json\"\n  );\n\n  return Brastlewark;\n};\n\nexport default function useBrastlewarkAPI() {\n  const [error, setError] = useState<Error | null>(null);\n  const [gnomes, setGnomes] = useState<GnomeInterface[]>([]);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        setError(null);\n        setGnomes(await fetchAPI());\n      } catch (e) {\n        setError(Error.FETCHING);\n      }\n    })();\n  }, []);\n\n  return [gnomes, error] as const;\n}\n","import { Error } from \"../../enums/error.enum\";\n\nexport default function ErrorCard({ error }: { error: Error }) {\n  const getErrorMessage = () => {\n    switch (error) {\n      case Error.FETCHING:\n        return \"it occurred when trying to obtain the data of the city of Brastlewark.\";\n      default:\n        return \"it's something internal and that we are already working to solve it. Please try again in a few minutes 😄\";\n    }\n  };\n\n  return (\n    <div className=\"error-card-container\">\n      <div className=\"error-card\">\n        <div className=\"error-card-title\">\n          We're so sorry, there was an error! 😞\n        </div>\n        <div className=\"error-card-description\">\n          The only thing you can know about the error is that{\" \"}\n          {getErrorMessage()}\n        </div>\n        <div className=\"error-card-description\">\n          You can reload the page to try again. If the problem persists, please\n          feel free to contact our great support team 🚀\n        </div>\n      </div>\n    </div>\n  );\n}\n","import Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\n\nexport default function GnomeCardSkeleton() {\n  const SkeletonCard = () => (\n    <div className=\"gnome-card\">\n      <div className=\"profile space-between\">\n        <Skeleton circle className=\"profile-image\" />\n      </div>\n      <Skeleton height={220} />\n    </div>\n  );\n\n  return (\n    <SkeletonTheme color=\"#393b3c\" highlightColor=\"#9ca3af\">\n      <div className=\"gnome-grid\">\n        <SkeletonCard />\n        <SkeletonCard />\n        <SkeletonCard />\n        <SkeletonCard />\n      </div>\n    </SkeletonTheme>\n  );\n}\n","import SearchIcon from \"../../assets/icons/search.icon\";\n\nexport default function NotFoundCard() {\n  return (\n    <div className=\"not-found-card-container\">\n      <div className=\"not-found-card\">\n        <SearchIcon className=\"not-found-card-icon\" />\n        <div className=\"not-found-card-title\">No results</div>\n        <div className=\"not-found-card-description\">\n          There are no Gnomes with that name! Try changing the filter!\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { Suspense, lazy, useState, useEffect, useMemo } from \"react\";\nimport useBrastlewarkAPI from \"../../custom-hooks/useBrastlewarkAPI\";\nimport usePageBottom from \"../../custom-hooks/usePageBottom\";\nimport { GnomeInterface } from \"../../interfaces/gnome.interface\";\nimport { useGnomeSearchContext } from \"../../contexts/gnome-search.context\";\nimport ErrorCard from \"../error-card\";\nimport GnomeCardSkeleton from \"../gnome-card/skeleton\";\nimport NotFoundCard from \"../not-found-card\";\nconst GnomeCard = lazy(() => import(\"../gnome-card\"));\n\nconst CARDS_TO_RENDER: number = 24;\n\nexport default function GnomeGrid() {\n  const [renderedCards, setRenderedCards] = useState<number>(CARDS_TO_RENDER);\n  const { filter } = useGnomeSearchContext();\n  const isAtTheBottom = usePageBottom();\n  const [gnomes, error] = useBrastlewarkAPI();\n\n  console.log(gnomes);\n\n  const filteredGnomes = useMemo(\n    () =>\n      gnomes.filter((gnome: GnomeInterface) =>\n        gnome.name.toLowerCase().includes(filter.toLowerCase())\n      ),\n    [gnomes, filter]\n  );\n\n  useEffect(() => {\n    if (isAtTheBottom) {\n      // Increments the cards to render\n      setRenderedCards(renderedCards + CARDS_TO_RENDER);\n    }\n  }, [isAtTheBottom]);\n\n  const renderGnomeGrid = () => {\n    if (error) {\n      return <ErrorCard error={error} />;\n    }\n\n    if (filteredGnomes.length === 0 && filter.length > 0) {\n      return <NotFoundCard />;\n    }\n\n    return (\n      <div className=\"gnome-grid\">\n        {filteredGnomes\n          .filter((_v, key: number) => key < renderedCards)\n          .map((gnome: GnomeInterface, key: number) => (\n            <GnomeCard key={key} gnome={gnome} />\n          ))}\n      </div>\n    );\n  };\n\n  return (\n    <Suspense fallback={<GnomeCardSkeleton />}>{renderGnomeGrid()}</Suspense>\n  );\n}\n","import { useEffect, useState } from \"react\";\n\nexport default function usePageBottom() {\n  const [bottom, setBottom] = useState<boolean>(false);\n\n  useEffect(() => {\n    function handleScroll() {\n      const isBottom =\n        window.innerHeight + document.documentElement.scrollTop ===\n        document.documentElement.offsetHeight;\n      setBottom(isBottom);\n    }\n\n    window.addEventListener(\"scroll\", handleScroll);\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, []);\n\n  return bottom;\n}\n","import { ReactNode } from \"react\";\nimport { useGnomeSearchContext } from \"../../contexts/gnome-search.context\";\n\nexport default function AppContainer({ children }: { children: ReactNode }) {\n  const { isSearching } = useGnomeSearchContext();\n  return (\n    <div className={`app-container ${isSearching ? \"block-overflow\" : \"\"}`}>\n      {isSearching && <div className=\"gnome-search-activated\" />}\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { GnomeSearchProvider } from \"../../contexts/gnome-search.context\";\nimport Background from \"../background\";\nimport GnomeSearchBar from \"../gnome-search-bar\";\nimport GnomeGrid from \"../gnome-grid\";\nimport AppContainer from \"./app-container\";\n\nexport default function App() {\n  return (\n    <Background>\n      <GnomeSearchProvider>\n        <GnomeSearchBar />\n        <AppContainer>\n          <GnomeGrid />\n        </AppContainer>\n      </GnomeSearchProvider>\n    </Background>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./assets/styles/index.scss\";\nimport App from \"./components/app\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}