{"version":3,"sources":["components/tooltip/index.tsx","components/badge/index.tsx","components/gnome-card/index.tsx"],"names":["Tooltip","children","text","className","Badge","color","onClick","GnomeCard","name","gnome","id","trim","replace","weight","toFixed","src","thumbnail","alt","loading","height","age","hair_color","professions","length","sort","a","b","map","profession","key","friends","friendName"],"mappings":"uMAOe,SAASA,EAAT,GAAoD,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,KAC1C,OACE,sBAAKC,UAAU,cAAf,UACGF,EACD,sBAAME,UAAU,OAAhB,SAAwBD,OCLf,SAASE,EAAT,GAA+D,IAA9CF,EAA6C,EAA7CA,KAA6C,IAAvCG,aAAuC,MAA/B,OAA+B,EAAvBC,EAAuB,EAAvBA,QACpD,OACE,qBACEH,UAAS,gBAAWE,EAAX,YAAoBC,EAAU,iBAAmB,aAC1DA,QAASA,EAFX,SAIGJ,ICRQ,SAASK,EAAT,GAA0D,IAAD,IACpCC,EADAC,EAAoC,EAApCA,MAIlC,OACE,sBAAKN,UAAU,aAAaO,IAJIF,EAIyBC,EAAMD,KAH/DA,EAAKG,OAAOC,QAAQ,KAAM,MAG1B,UACE,sBAAKT,UAAU,wBAAf,UACE,sBAAKA,UAAU,gBAAf,UAAgCM,EAAMI,OAAOC,QAAQ,GAArD,UACA,qBAAKX,UAAU,gBAAf,SACE,qBACEY,IAAKN,EAAMO,UACXC,IAAG,UAAKR,EAAMD,KAAKG,QACnBO,QAAQ,WAGZ,sBAAKf,UAAU,gBAAf,UAAgCM,EAAMU,OAAOL,QAAQ,GAArD,aAEF,sBAAKX,UAAU,YAAf,UACE,qBAAKA,UAAU,aAAf,SAA6BM,EAAMD,KAAKG,SACxC,sBAAKR,UAAU,wBAAf,UACE,sBAAKA,UAAU,YAAf,UAA4BM,EAAMW,IAAlC,YACA,cAACpB,EAAD,CAASE,KAAI,sBAAiBO,EAAMY,YAApC,SACE,qBAAKlB,UAAU,6BAAf,SACE,qBAAKA,UAAWM,EAAMY,oBAI5B,sBAAKlB,UAAU,4BAAf,UACE,qBAAKA,UAAU,wBAAf,SACGM,EAAMa,YAAaC,OAAS,EACzB,cACA,yBAEN,qBAAKpB,UAAU,eAAf,mBACGM,EAAMa,mBADT,aACG,EACGE,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEH,OAASE,EAAEF,UAC7BI,KAAI,SAACC,EAAYC,GAAb,OACH,cAACzB,EAAD,CAAiBF,KAAM0B,EAAWjB,QAAtBkB,WAIpB,sBAAK1B,UAAU,4BAAf,UACE,qBAAKA,UAAU,wBAAf,SACGM,EAAMqB,QAASP,OAAS,EAAI,UAAY,gBAE3C,qBAAKpB,UAAU,eAAf,mBACGM,EAAMqB,eADT,aACG,EACGN,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEH,OAASE,EAAEF,UAC7BI,KAAI,SAACI,EAAYF,GAAb,OACH,cAACzB,EAAD,CAAiBF,KAAM6B,EAAWpB,OAAQN,MAAM,OAApCwB","file":"static/js/3.a4ce0397.chunk.js","sourcesContent":["import { ReactNode } from \"react\";\n\ninterface TooltipProps {\n  children: ReactNode;\n  text: string;\n}\n\nexport default function Tooltip({ children, text }: TooltipProps) {\n  return (\n    <div className=\"tooltip top\">\n      {children}\n      <span className=\"text\">{text}</span>\n    </div>\n  );\n}\n","interface BadgeProps {\n  text: string;\n  color?: string | \"blue\" | \"red\";\n  onClick?: () => void;\n}\n\nexport default function Badge({ text, color = \"blue\", onClick }: BadgeProps) {\n  return (\n    <div\n      className={`badge ${color} ${onClick ? \"cursor-pointer\" : \"user-none\"}`}\n      onClick={onClick}\n    >\n      {text}\n    </div>\n  );\n}\n","import { GnomeInterface } from \"../../interfaces/gnome.interface\";\nimport Tooltip from \"../tooltip\";\nimport Badge from \"../badge\";\n\nexport default function GnomeCard({ gnome }: { gnome: GnomeInterface }) {\n  const transformNameToKebabCase = (name: string) =>\n    name.trim().replace(/ /g, \"-\");\n\n  return (\n    <div className=\"gnome-card\" id={transformNameToKebabCase(gnome.name)}>\n      <div className=\"profile space-between\">\n        <div className=\"gnome-anatomy\">{gnome.weight.toFixed(2)} lbs</div>\n        <div className=\"profile-image\">\n          <img\n            src={gnome.thumbnail}\n            alt={`${gnome.name.trim()}`}\n            loading=\"lazy\"\n          />\n        </div>\n        <div className=\"gnome-anatomy\">{gnome.height.toFixed(2)} mts</div>\n      </div>\n      <div className=\"container\">\n        <div className=\"gnome-name\">{gnome.name.trim()}</div>\n        <div className=\"gnome-information-row\">\n          <div className=\"gnome-age\">{gnome.age} years</div>\n          <Tooltip text={`Hair Color: ${gnome.hair_color}`}>\n            <div className=\"user-none gnome-hair-color\">\n              <div className={gnome.hair_color} />\n            </div>\n          </Tooltip>\n        </div>\n        <div className=\"gnome-attribute-container\">\n          <div className=\"gnome-attribute-title\">\n            {gnome.professions!.length > 0\n              ? \"Professions\"\n              : \"Is looking for a job\"}\n          </div>\n          <div className=\"gnome-badges\">\n            {gnome.professions\n              ?.sort((a, b) => b.length - a.length)\n              .map((profession, key) => (\n                <Badge key={key} text={profession.trim()} />\n              ))}\n          </div>\n        </div>\n        <div className=\"gnome-attribute-container\">\n          <div className=\"gnome-attribute-title\">\n            {gnome.friends!.length > 0 ? \"Friends\" : \"Is a hermit\"}\n          </div>\n          <div className=\"gnome-badges\">\n            {gnome.friends\n              ?.sort((a, b) => b.length - a.length)\n              .map((friendName, key) => (\n                <Badge key={key} text={friendName.trim()} color=\"red\" />\n              ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}